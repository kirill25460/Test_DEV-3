{"mappings":"YAEA,IAAMA,EAAYC,SAASC,eAAe,aACpCC,EAAcF,SAASC,eAAe,eACtCE,EAASH,SAASC,eAAe,UAGvCF,EAAUK,iBAAiB,YAAY,SAACC,GAClB,UAAdA,EAAMC,MACNH,EAAOI,YAAcR,EAAUS,M,IAIvCN,EAAYE,iBAAiB,SAAS,WAClCD,EAAOI,YAAcR,EAAUS,K,IAGnC,IACIC,EAAQC,EAAQC,EAAMC,EADtBC,GAAa,EAEbC,EAAgB,GAgCpB,SAASC,IACL,IARMC,EAQAC,EAAOd,EAAOI,YACpBJ,EAAOe,UAAY,GACnB,IAAK,IAAIC,EAAI,EAAGA,EAAIF,EAAKG,OAAQD,IAAK,CAClC,IAAME,EAAOrB,SAASsB,cAAc,QACpCD,EAAKd,YAAcU,EAAKE,GAZtBH,YAaoBK,EAbLE,yBACTC,MAAQC,KAAKC,IAAIjB,EAAQE,IAC9BK,EAAKW,OAASF,KAAKG,IAAInB,EAAQE,IAC/BK,EAAKa,KAAOJ,KAAKC,IAAIhB,EAAQE,IAC7BI,EAAKc,QAAUL,KAAKG,IAAIlB,EAAQE,KAU/BS,EAAKU,MAAMC,MAAQ,OAEvB7B,EAAO8B,YAAYZ,E,EAvC3BlB,EAAOC,iBAAiB,aAAa,SAACC,GAClCQ,GAAa,EACbJ,EAASJ,EAAM6B,QACfxB,EAASL,EAAM8B,QACfxB,EAAON,EAAM6B,QACbtB,EAAOP,EAAM8B,O,IAGjBnC,SAASI,iBAAiB,aAAa,SAACC,GAChCQ,IACAF,EAAON,EAAM6B,QACbtB,EAAOP,EAAM8B,QACbpB,I,IAIRf,SAASI,iBAAiB,WAAW,WAC7BS,IACAA,GAAa,EACbE,I,IA4BR,IAAIqB,EAAgB,KAChBC,EAAU,EACVC,EAAU,EAIdtC,SAASI,iBAAiB,aAAa,SAACC,GACpC,IAAMkC,EAASlC,EAAMkC,OACrB,GAAwB,SAApBA,EAAOC,SAAqB,CAE5B,IAAMxB,GADNoB,EAAgBG,GACWhB,wBACRlB,EAAM6B,QAAUlB,EAAKQ,KACrBnB,EAAM8B,QAAUnB,EAAKa,IACxCQ,EAAUrB,EAAKQ,KAAOnB,EAAM6B,QAC5BI,EAAUtB,EAAKa,IAAMxB,EAAM8B,QAC3BC,EAAcL,MAAMU,SAAW,WAC/BL,EAAcL,MAAMW,OAAS,IAC7B1C,SAAS2C,KAAKV,YAAYG,E,KAKlCpC,SAASI,iBAAiB,aAAa,SAACC,GACpC,GAAI+B,EAAe,CACf,IAAMQ,EAAevC,EAAM6B,QAAUG,EAC/BQ,EAAexC,EAAM8B,QAAUG,EACjCQ,GAAc,EAElBhC,EAAciC,SAAQ,SAAA1B,GAClB,GAAIA,EAAK2B,UAAUC,SAAS,aAAe5B,IAASe,EAAe,CAC/D,IAAMpB,EAAOK,EAAKE,wBACdE,KAAKyB,IAAIlC,EAAKQ,KAAOoB,GAAgB,IACrCE,GAAc,E,KAKrBA,GAIDV,EAAcL,MAAMP,KAAOoB,EAAgB,GAAM,KACjDR,EAAcL,MAAMF,IAAMgB,EAAe,OAJzCT,EAAcL,MAAMP,KAAOoB,EAAe,KAC1CR,EAAcL,MAAMF,IAAMgB,EAAe,K,KAUrD7C,SAASI,iBAAiB,WAAW,WAC7BgC,IACAA,EAAcL,MAAMU,SAAW,WAC/BL,EAAcL,MAAMW,OAAS,OAC7BN,EAAgB,K","sources":["src/index.js"],"sourcesContent":["import './css/styles.css';\n\nconst inputText = document.getElementById('inputText');\nconst applyButton = document.getElementById('applyButton');\nconst result = document.getElementById('result');\nlet initialPositionX, initialPositionY;\n\ninputText.addEventListener('keypress', (event) => {\n    if (event.key === 'Enter') {\n        result.textContent = inputText.value;\n    }\n});\n\napplyButton.addEventListener('click', () => {\n    result.textContent = inputText.value;\n});\n\nlet isDragging = false;\nlet startX, startY, endX, endY;\nlet selectedSpans = [];\n\nresult.addEventListener('mousedown', (event) => {\n    isDragging = true;\n    startX = event.clientX;\n    startY = event.clientY;\n    endX = event.clientX;\n    endY = event.clientY;\n});\n\ndocument.addEventListener('mousemove', (event) => {\n    if (isDragging) {\n        endX = event.clientX;\n        endY = event.clientY;\n        updateSelection();\n    }\n});\n\ndocument.addEventListener('mouseup', () => {\n    if (isDragging) {\n        isDragging = false;\n        updateSelection();\n    }\n});\nfunction isInsideSelection(element) {\n    const rect = element.getBoundingClientRect();\n    return rect.left >= Math.min(startX, endX) &&\n           rect.right <= Math.max(startX, endX) &&\n           rect.top >= Math.min(startY, endY) &&\n           rect.bottom <= Math.max(startY, endY);\n}\n\nfunction updateSelection() {\n    const text = result.textContent;\n    result.innerHTML = '';\n    for (let i = 0; i < text.length; i++) {\n        const span = document.createElement('span');\n        span.textContent = text[i];\n        if (isInsideSelection(span)) {\n            span.style.color = 'red';\n        }\n        result.appendChild(span);\n    }\n}\n\n\n\n\n\nlet draggedLetter = null;\nlet offsetX = 0;\nlet offsetY = 0;\n\n\n\ndocument.addEventListener('mousedown', (event) => {\n    const target = event.target;\n    if (target.nodeName === 'SPAN') {\n        draggedLetter = target;\n        const rect = draggedLetter.getBoundingClientRect();\n        initialPositionX = event.clientX - rect.left;\n        initialPositionY = event.clientY - rect.top;\n        offsetX = rect.left - event.clientX;\n        offsetY = rect.top - event.clientY;\n        draggedLetter.style.position = 'absolute';\n        draggedLetter.style.zIndex = 1000;\n        document.body.appendChild(draggedLetter);\n    }\n});\n\n\ndocument.addEventListener('mousemove', (event) => {\n    if (draggedLetter) {\n        const newPositionX = event.clientX + offsetX;\n        const newPositionY = event.clientY + offsetY;\n        let isColliding = false;\n\n        selectedSpans.forEach(span => {\n            if (span.classList.contains('selected') && span !== draggedLetter) {\n                const rect = span.getBoundingClientRect();\n                if (Math.abs(rect.left - newPositionX) < 1) {\n                    isColliding = true;\n                }\n            }\n        });\n\n        if (!isColliding) {\n            draggedLetter.style.left = newPositionX + 'px';\n            draggedLetter.style.top = newPositionY + 'px';\n        } else {\n            draggedLetter.style.left = (newPositionX + 10) + 'px'; \n            draggedLetter.style.top = newPositionY + 'px';\n        }\n    }\n});\n\n\n\ndocument.addEventListener('mouseup', () => {\n    if (draggedLetter) {\n        draggedLetter.style.position = 'absolute';\n        draggedLetter.style.zIndex = 'auto';\n        draggedLetter = null;\n    }\n});\n\n\n\n"],"names":["$b8f9b7833fa37166$var$inputText","document","getElementById","$b8f9b7833fa37166$var$applyButton","$b8f9b7833fa37166$var$result","addEventListener","event","key","textContent","value","$b8f9b7833fa37166$var$startX","$b8f9b7833fa37166$var$startY","$b8f9b7833fa37166$var$endX","$b8f9b7833fa37166$var$endY","$b8f9b7833fa37166$var$isDragging","$b8f9b7833fa37166$var$selectedSpans","$b8f9b7833fa37166$var$updateSelection","rect","text","innerHTML","i","length","span","createElement","getBoundingClientRect","left","Math","min","right","max","top","bottom","style","color","appendChild","clientX","clientY","$b8f9b7833fa37166$var$draggedLetter","$b8f9b7833fa37166$var$offsetX","$b8f9b7833fa37166$var$offsetY","target","nodeName","position","zIndex","body","newPositionX","newPositionY","isColliding","forEach","classList","contains","abs"],"version":3,"file":"index.f30c4a51.js.map"}